plot(LOG_HatchingTime_Days ~ Temperature_Degrees,data=fish)
#an easier way producing the same line automatically
abline(fish_log_model, col="red")
par (mfrow=c(2,3))
plot (HatchingTime_Days ~ LOG_Temperature_Degrees, data=fish)
plot (HatchingTime_Days ~ SQRT_Temperature_Degrees, data=fish)
plot (HatchingTime_Days ~ squared_Temperature_Degrees, data=fish)
plot (LOG_HatchingTime_Days ~ Temperature_Degrees, data=fish)
plot (SQRT_HatchingTime_Days ~ Temperature_Degrees, data=fish)
plot (squared_HatchingTime_Days ~ Temperature_Degrees, data=fish)
#only log_hatchingtime_days plot looks straight and should be used for refit
fish_log_model <- lm (LOG_HatchingTime_Days ~ Temperature_Degrees,data=fish)
fish_log_residuals<-residuals(fish_log_model)
hist(fish_log_residuals, col="light blue", breaks = 10)
#appears normally distirbuted
#qq plot
qqnorm(fish_log_residuals)
#line for qq plot
qqline(fish_log_residuals)
par (mfrow=c(1,1))
fish_log_fitted <- fitted(fish_log_model)
#now  plotting the residuals against the fitted values
plot(fish_log_residuals~fish_log_fitted)
#data looks much more ustructured - better now
#finalplot
#replotting with a line of best fit
plot(LOG_HatchingTime_Days ~ Temperature_Degrees,data=fish)
#an easier way producing the same line automatically
abline(fish_log_model, col="red")
summary(fish_log_model)
anova(fish_log_model)
#DFs are 1 and 137
source("plot_ms_trees_single_pop.R")
setwd("~/Desktop/R for BioBsc")
source("plot_ms_trees_single_pop.R")
plot_ms_tree()
plot_ms_tree(10, "-T")
library(pcadapt)
fname <- read.pcadapt("prj.bed",type="bed")
position.details = read.table("prj.bim")
fname
position.details
test1 = pcadapt(fname,K=10)
plot(test1,option="screeplot")
test1 = pcadapt(fname,K=5)
plot(test1,option="screeplot")
test1 = pcadapt(fname,K=15)
plot(test1,option="screeplot")
test1 = pcadapt(fname,K=4)
plot(test1,option="screeplot")
test1 = pcadapt(fname,K=6)
plot(test1,option="screeplot")
str(test1)
raw.data= bed2matrix(fname)
raw.data= bed2matrix(fname)
dim(raw.data)
plot(test1,option="scores")
plot(test1,option="screeplot")
plot(test1,option="scores")
plot(test1,option="manhattan")
signif = which(-log10(test1$pvalues) > 15)
position.details[signif,]
descript = read.table("prj.fam")
descript
poplist.names = descript[,1]
test1 = pcadapt(fname,K=2)
plot(test1,option="screeplot")
test1 = pcadapt(fname,K=6)
plot(test1,option="screeplot")
test1 = pcadapt(fname,K=2)
plot(test1,option="screeplot")
test1 = pcadapt(fname,K=6)
plot(test1,option="screeplot")
test1 = pcadapt(fname,K=2)
plot(test1,option="scores")
descript = read.table("prj.fam")
poplist.names = descript[,1]
plot(test1,option="scores",pop=poplist.names)
plot(test1,option="scores",pop=poplist.names, col=colours)
plot(test1,option="scores",pop=poplist.names)
poplist.names
newnames.names = poplist.names
which(poplist.names == "CNWB3")
which(poplist.names [(poplist.names == "CNWB3")])
poplist.names[which(poplist.names == "CNWB3")]
colours = c("dark red","light red","dark dark blue","dark green", "light blue", "dark blue", "light pink", "dark pink", "light green","dark orange")
plot(test1,option="scores",pop=poplist.names, col=colours)
colours = c("dark red","light red","blue4","dark green", "light blue", "dark blue", "light pink", "dark pink", "light green","dark orange")
plot(test1,option="scores",pop=poplist.names, col=colours)
colours=c("#660000","#FF6666","#000066", "#003300", "#00CCFF", "#003399", "#FF66FF", "#660066", "#00FF00", "#993300"))
colours=c("#660000","#FF6666","#000066", "#003300", "#00CCFF", "#003399", "#FF66FF", "#660066", "#00FF00", "#993300")
plot(test1,option="scores",pop=poplist.names, col=colours)
descript = read.table("prj.fam")
descript
unique(poplist.names)
new.poplist=poplist.names
new.poplist[which(new.poplist.name=="FIWB")] ="Finnish WB"
new.poplist=poplist.names
new.poplist[which(new.poplist.name=="FIWB")] ="Finnish WB"
new.poplist=poplist.names
new.poplist[which(new.poplist.name=="FIWB")] ="Finnish WB"
new.poplist[which(new.poplist=="FIWB")] ="Finnish WB"
new.poplist
fname <- read.pcadapt("prj.bed",type="bed")
position.details = read.table("prj.bim")
test1 = pcadapt(fname,K=6)
plot(test1,option="screeplot")
test1 = pcadapt(fname,K=2)
plot(test1,option="scores")
plot(test1,option="screeplot")
fname <- read.pcadapt("prj.bed",type="bed")
position.details = read.table("prj.bim")
plot(test1,option="screeplot")
fname <- read.pcadapt("prj.bed",type="bed")
position.details = read.table("prj.bim")
test1 = pcadapt(fname,K=6)
plot(test1,option="screeplot")
plot(test1,option="scores")
descript = read.table("prj.fam")
poplist.names = descript[,1]
plot(test1,option="scores",pop=poplist.names, col=colours)
new.poplist[which(new.poplist=="CNWB3")] ="Chinse WB"
new.poplist[which(new.poplist=="CNXI")] ="Chinese P"
new.poplist[which(new.poplist=="THWB")] ="Thai WB"
new.poplist[which(new.poplist=="THCD")] ="Thai P"
new.poplist[which(new.poplist=="KPWB")] ="Korean WB"
new.poplist[which(new.poplist=="KPKO")] ="Korean P"
new.poplist[which(new.poplist=="IBWB")] ="Portuguese WB"
new.poplist[which(new.poplist=="PTBI")] ="Portuguse P"
new.poplist[which(new.poplist=="ITWB1")] ="Italian WB"
new.poplist[which(new.poplist=="ITNS")] ="Italian P"
new.poplist[which(new.poplist=="FIWB")] ="Finnish WB"
new.poplist[which(new.poplist=="SEL1")] ="Swedish P"
new.poplist=poplist.names
plot(test1,option="scores",pop=new.poplist, col=colours)
new.poplist=poplist.names
plot(test1,option="scores",pop=new.poplist, col=colours)
plot(test1,option="scores",new.poplist=poplist.names, col=colours)
plot(test1,option="scores",pop=new.poplist, col=colours)
plot(test1,option="scores",name=new.poplist, col=colours)
plot(test1,option="scores",pop=new.poplist, col=colours)
plot(test1,option="scores",pop=poplist.names, col=colours)
new.poplist=poplist.names
plot(test1,option="scores",pop=new.names, col=colours)
plot(test1,option="scores",pop=new.poplist, col=colours)
new.poplist[which(new.poplist=="CNWB3")] ="Chinse WB"
new.poplist[which(new.poplist=="CNXI")] ="Chinese P"
new.poplist[which(new.poplist=="THWB")] ="Thai WB"
new.poplist[which(new.poplist=="CNWB3")] ="Chinse WB"
new.poplist[which(new.poplist=="CNXI")] ="Chinese P"
new.poplist[which(new.poplist=="THWB")] ="Thai WB"
new.poplist[which(new.poplist=="THCD")] ="Thai P"
new.poplist[which(new.poplist=="KPWB")] ="Korean WB"
new.poplist[which(new.poplist=="KPKO")] ="Korean P"
new.poplist[which(new.poplist=="IBWB")] ="Portuguese WB"
new.poplist[which(new.poplist=="PTBI")] ="Portuguse P"
new.poplist[which(new.poplist=="ITWB1")] ="Italian WB"
new.poplist[which(new.poplist=="ITNS")] ="Italian P"
new.poplist[which(new.poplist=="FIWB")] ="Finnish WB"
new.poplist[which(new.poplist=="SEL1")] ="Swedish P"
new.poplist
plot(test1,option="scores",pop=new.poplist, col=colours)
new.poplist[which(new.poplist=="SEL1")] ="Swedish P"
new.poplist[which(new.poplist=="SELI")] ="Swedish P"
plot(test1,option="scores",pop=new.poplist, col=colours)
new.poplist[which(new.poplist=="CNWB3")] ="Chinese WB"
plot(test1,option="scores",pop=new.poplist, col=colours)
new.poplist[which(new.poplist=="CNWB3")] ="Chinese WB"
plot(test1,option="scores",pop=new.poplist, col=colours)
new.poplist[which(new.poplist=="CNWB3")] ="Chinese WB"
new.poplist=poplist.names
plot(test1,option="scores",pop=new.poplist, col=colours)
plot(test1,option="screeplot")
new.poplist[which(new.poplist=="CNWB3")] ="Chinese WB"
new.poplist[which(new.poplist=="CNXI")] ="Chinese P"
new.poplist[which(new.poplist=="THWB")] ="Thai WB"
new.poplist[which(new.poplist=="THCD")] ="Thai P"
new.poplist[which(new.poplist=="KPWB")] ="Korean WB"
new.poplist[which(new.poplist=="KPKO")] ="Korean P"
new.poplist[which(new.poplist=="IBWB")] ="Portuguese WB"
new.poplist[which(new.poplist=="PTBI")] ="Portuguse P"
new.poplist[which(new.poplist=="ITWB1")] ="Italian WB"
new.poplist[which(new.poplist=="ITNS")] ="Italian P"
new.poplist[which(new.poplist=="FIWB")] ="Finnish WB"
new.poplist[which(new.poplist=="SELI")] ="Swedish P"
plot(test1,option="scores",pop=new.poplist, col=colours)
plot(test1,option="manhattan")
signif = which(-log10(test1$pvalues) > 15)
signif
test1$pvalues[signif]
col=c("#FF0000", "#990000", "#0000FF", "#0099FF", "#0033FF", "#FF0099", "#990066", "#00CC00", "#006600", "#000099", "#FF6600", "#993300")
plot(test1,option="scores",pop=new.poplist, col=colours)
plot(test1,option="scores",pop=new.poplist, col=colours)
plot(test1,option="scores",pop=new.poplist, col=colours)
col=c("#FF0000", "#990000", "#0000FF", "#0099FF", "#0033FF", "#FF0099", "#990066", "#00CC00", "#006600", "#000099", "#FF6600", "#993300")
plot(test1,option="scores",pop=new.poplist, col=colours)
position.details[signif,]
col=c("#FF0000", "#990000", "#0000FF", "#0099FF", "#0033FF", "#FF0099", "#990066", "#00CC00", "#006600", "#000099", "#FF6600", "#993300")
plot(test1,option="scores",pop=new.poplist, col=colours)
plot(test1,option="scores")
fname <- read.pcadapt("prj.bed",type="bed")
position.details = read.table("prj.bim")
library(pcadapt)
fname <- read.pcadapt("prj.bed",type="bed")
position.details = read.table("prj.bim")
test1 = pcadapt(fname,K=6)
plot(test1,option="screeplot")
test1 = pcadapt(fname,K=2)
raw.data= bed2matrix(fname)
dim(raw.data)
# 119 52783
plot(test1,option="scores")
descript = read.table("prj.fam")
poplist.names = descript[,1]
plot(test1,option="scores",pop=new.poplist, col=colours)
col=c("#FF0000", "#990000", "#0000FF", "#0099FF", "#0033FF", "#FF0099", "#990066", "#00CC00", "#006600", "#000099", "#FF6600", "#993300")
new.poplist=poplist.names
new.poplist[which(new.poplist=="CNWB3")] ="Chinese WB"
new.poplist[which(new.poplist=="CNXI")] ="Chinese P"
new.poplist[which(new.poplist=="THWB")] ="Thai WB"
new.poplist[which(new.poplist=="THCD")] ="Thai P"
new.poplist[which(new.poplist=="KPWB")] ="Korean WB"
new.poplist[which(new.poplist=="KPKO")] ="Korean P"
new.poplist[which(new.poplist=="IBWB")] ="Portuguese WB"
new.poplist[which(new.poplist=="PTBI")] ="Portuguse P"
new.poplist[which(new.poplist=="ITWB1")] ="Italian WB"
new.poplist[which(new.poplist=="ITNS")] ="Italian P"
new.poplist[which(new.poplist=="FIWB")] ="Finnish WB"
new.poplist[which(new.poplist=="SELI")] ="Swedish P"
colours=c("#FF0000", "#990000", "#0000FF", "#0099FF", "#0033FF", "#FF0099", "#990066", "#00CC00", "#006600", "#000099", "#FF6600", "#993300")
plot(test1,option="scores",pop=new.poplist, col=colours)
position.details[signif,]
descript = read.table("prj.fam")
descript
descript = read.table("prj.fam")
raw.data= bed2matrix(fname)
raw.data
get.pc(test1,signif)
position.details[signif,]
get.pc(test1,signif)
plot(test1$scores[,1],test1$scores[,4],col=raw.data[,8038]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,8038]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44370]+1,pch=16)
#16 is just code for a symbol
#black and green - homozygous; red is heterozygous of derived allele
# -> relabel labels PC1 and 2
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,22090]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44379]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,41821]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,16121]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,33307]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,48814]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,48815]+1,pch=16)
par(mfrow=c(1,8))
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44370]+1,pch=16)
#16 is just code for a symbol
#black and green - homozygous; red is heterozygous of derived allele
# -> relabel labels PC1 and 2
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,22090]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44379]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,41821]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,16121]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,33307]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,48814]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,48815]+1,pch=16)
par(mfrow=c(1,8))
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44370]+1,pch=16)
#16 is just code for a symbol
#black and green - homozygous; red is heterozygous of derived allele
# -> relabel labels PC1 and 2
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,22090]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44379]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,41821]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,16121]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,33307]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,48814]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,48815]+1,pch=16)
par(mfrow=c(4,4))
par(mfrow=c(4,4))
par(mfrow=c(4,4))
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44370]+1,pch=16)
#16 is just code for a symbol
#black and green - homozygous; red is heterozygous of derived allele
# -> relabel labels PC1 and 2
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,22090]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44379]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,41821]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,16121]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,33307]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,48814]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,48815]+1,pch=16)
par(mfrow=c(2,2))
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44370]+1,pch=16)
#16 is just code for a symbol
#black and green - homozygous; red is heterozygous of derived allele
# -> relabel labels PC1 and 2
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,22090]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44379]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,41821]+1,pch=16)
par(mfrow=c(2,3))
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44370]+1,pch=16)
#16 is just code for a symbol
#black and green - homozygous; red is heterozygous of derived allele
# -> relabel labels PC1 and 2
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,22090]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44379]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,41821]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,16121]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,33307]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,48814]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,48815]+1,pch=16)
par(mfrow=c(2,3))
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44370]+1,pch=16)
#16 is just code for a symbol
#black and green - homozygous; red is heterozygous of derived allele
# -> relabel labels PC1 and 2
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,22090]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44379]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,41821]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,16121]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,33307]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,48814]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,48815]+1,pch=16)
par(mfrow=c(2,3))
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44370]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,22090]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44379]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,41821]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,16121]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,33307]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,48814]+1,pch=16)
par(mfrow=c(3,3))
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44370]+1,pch=16)
par(mfrow=c(2,4))
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44370]+1,pch=16)
par(mfrow=c(3,3))
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44370]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,22090]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44379]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,41821]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,16121]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,33307]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,48814]+1,pch=16)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,48815]+1,pch=16)
get.pc(test1,signif)
View(op)
View(op)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,16121]+1,pch=16, cex=0.5)
par(mfrow=c(1,1))
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,16121]+1,pch=16, cex=0.5)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,16121]+1,pch=16, cex=0.7)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,16121]+1,pch=16, cex=0.6)
par(mfrow=c(2,2))
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44370]+1,pch=16, cex=0.6)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,22090]+1,pch=16, cex=0.6)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44379]+1,pch=16, cex=0.6)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,16121]+1,pch=16, cex=0.6)
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44370]+1,pch=16, cex=0.6, main= "Gene ", xlab= "PCA1", ylab="PCA2")
get.pc(test1,signif)
par(mfrow=c(2,2))
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44370]+1,pch=16, cex=0.6, main= "ABLIM1", xlab= "PCA1", ylab="PCA2")
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,22090]+1,pch=16, cex=0.6, main= "EXOC2", xlab= "PCA1", ylab="PCA2")
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44379]+1,pch=16, cex=0.6, main= "TRUB1", xlab= "PCA1", ylab="PCA2")
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,16121]+1,pch=16, cex=0.6, main= "ADGRL2", xlab= "PCA1", ylab="PCA2")
par(mfrow=c(2,2))
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44370]+1,pch=16, cex=0.6, main= "ABLIM1", xlab= "PC1", ylab="PC2")
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,22090]+1,pch=16, cex=0.6, main= "EXOC2", xlab= "PC1", ylab="PC2")
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,44379]+1,pch=16, cex=0.6, main= "TRUB1", xlab= "PC1", ylab="PC2")
plot(test1$scores[,1],test1$scores[,2],col=raw.data[,16121]+1,pch=16, cex=0.6, main= "ADGRL2", xlab= "PC1", ylab="PC2")
test1$pvalues[signif]
position.details[signif,]
